namespace Cursed.Base.Tests

open Cursed.Base

open NUnit.Framework
open Swensen.Unquote
open ModpackController

[<TestFixture>]
type ModpackControllerTests() = 
    [<Test>]
    member this.``When creating multimc instance should create list of strings`` () = 
        let version = "12.3.1"
        let name = "name"
        let author = "me"
        let forge = "12.4234.525.234"
        let instance = CreateMultiMcInstance version name author forge
        test <@ instance.Count = 14 @>
        test <@ instance.["InstanceType"] = "OneSix" @>
        test <@ instance.["IntendedVersion"] = version @>
        test <@ instance.["LogPrePostOutput"] = "true" @>
        test <@ instance.["OverrideCommands"] = "false" @>
        test <@ instance.["OverrideConsole"] = "false" @>
        test <@ instance.["OverrideJavaArgs"] = "false" @>
        test <@ instance.["OverrideJavaLocation"] = "false" @>
        test <@ instance.["OverrideMemory"] = "false" @>
        test <@ instance.["OverrideWindow"] = "false" @>
        test <@ instance.["iconKey"] = "default" @>
        test <@ instance.["lastLaunchTime"] = "0" @>
        test <@ instance.["name"] = sprintf "%s %s" name version @>
        test <@ instance.["notes"] = sprintf "Modpack by %s. Generated by Cursed. Using %s" author forge @>
        test <@ instance.["totalTimePlayed"] = "0" @>

    [<Test>]
    member this.``When updating progress bar state should correctly set state`` () =
        test <@ UpdateProgressBarAmount (Progress 1) = Progress 2 @>
        test <@ UpdateProgressBarAmount Indeterminate = Progress 1 @>
        test <@ UpdateProgressBarAmount Disabled = Progress 1 @>